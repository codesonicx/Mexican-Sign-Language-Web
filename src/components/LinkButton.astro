---
interface LinkButtonProps {
    text?: string;
    href: string;
    variant?: 'primary' | 'secondary' | 'default';
    target?: '_self' | '_blank';
    rel?: string;
}
const props = Astro.props as LinkButtonProps;

const text    = props.text;
const href    = props.href;
const variant = props.variant || 'default';
const target  = props.target;
let   rel     = props.rel;

if (target === '_blank' && !rel) {
    rel = 'noopener noreferrer';
}
---
<a href={href} target={target} rel={rel} class={`btn ${variant}`}>
    <slot />{text}
</a>

<style>
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 8px 14px;
        border: 1px solid var(--border);
        border-radius: 8px;
        box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        font-weight: 500;
        min-width: 100px;
        transition: all .2s ease;
        text-decoration: none;
        cursor: pointer;
    }
    .primary {
        background: var(--primary);
        color: var(--primary-foreground);
        font-size: 1.125rem;
    }
    .primary:hover {
        background: color-mix(in oklab, var(--primary) 90%, transparent);
    }
    .secondary {
        background: var(--primary-foreground);
        color: var(--foreground);
        font-size: 1.125rem;
    }
    .secondary:hover {
        background: var(--secondary);
        color: var(--primary-foreground);
    }
    .default {
        background: var(--primary-foreground);
        color: var(--foreground);
    }
    .default:hover {
        background: var(--secondary);
        color: var(--primary-foreground);
    }
</style>
