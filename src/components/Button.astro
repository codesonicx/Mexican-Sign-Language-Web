---
interface ButtonProps {
    id?: string;
    text?: string;
    type?: 'button' | 'submit' | 'reset';
    variant?: 'primary' | 'secondary' | 'default';
    disabled?: boolean;
}
const props = Astro.props as ButtonProps;

const id      = props.id;
const text    = props.text;
const type    = props.type || 'button';
const variant = props.variant || 'default';
const disabled = !!props.disabled;
---
<button id={id} type={type} class={`btn ${variant}`} disabled={disabled}>
    <slot />
    {text}
</button>

<style>
    .btn {
        display: inline-flex; 
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 8px 14px;
        border: 1px solid var(--border);
        border-radius: 8px;
        box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        font-weight: 500;
        min-width: 100px;
        transition: all .2s ease;
        cursor: pointer;
    }
    .primary {
        background: var(--primary);
        color: var(--primary-foreground);
        font-size: 1.125rem;
    }
    .primary:hover {
        background: color-mix(in oklab, var(--primary) 90%, transparent);
    }

    .secondary {
        background: var(--primary-foreground);
        color: var(--foreground);
        font-size: 1.125rem;
    }
    .secondary:hover {
        background: var(--secondary);
        color: var(--primary-foreground);
    }
    .default {
        background: var(--primary-foreground);
        color: var(--foreground);
    }
    .default:hover {
        background: var(--secondary);
        color: var(--primary-foreground);
    }
    .btn:disabled {
        opacity: .6;
        pointer-events: none;
        }
</style>
