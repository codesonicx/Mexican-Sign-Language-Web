---
const letters = [..."ABCDEFGHIJKLMNÑOPQRSTUVWXYZ"];
import SignReference from '../components/SignReference.astro'
---
<fieldset class="gesture-box">
    <h2>LSM alphabet</h2>
    <p>Click on a letter to see its sign</p>
    <legend class="sr-only">Select a letter</legend>
    <div class="letters-grid">
        {letters.map((letter) => (
            <label class="gesture-button">
            <input
                type="radio"
                name="letter"
                value={letter}
                required
                class="sr-only"
            />
            <span aria-hidden="true">{letter}</span>
            </label>
        ))}
    </div>

    <SignReference/>

</fieldset>



<style>
    .gesture-box {
        display: flex;
        flex-direction: column;
        gap: 16px;
        padding: 1rem;
        border: 1px solid var(--border);
        box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        border-radius: 8px;
        background-color: var(--card);
    }

    .letters-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        place-items: center;
        gap: 0.5rem;
    }

    .gesture-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 0.375rem;
        background: var(--background);
        color: var(--primary);
        border: 2px solid var(--border);
        cursor: pointer;
        user-select: none;
        font-weight: 600;
        transition: background 0.2s, border-color 0.2s;
    }

    .gesture-button:hover {
        background-color: var(--accent);
        color: var(--background);
    }

    .sr-only {
        position: absolute !important;
        width: 1px; height: 1px;
        padding: 0; margin: -1px;
        overflow: hidden; clip: rect(0,0,0,0);
        white-space: nowrap; border: 0;
    }

    .gesture-button:has(input:checked),
    .gesture-button:has(input:focus) {
        background: var(--foreground);
        color: var(--background)
    }

    .gesture-button span {
        display: block;
        line-height: 1;
    }
</style>


<script>
    const fieldset = document.querySelector('.gesture-box') as HTMLFieldSetElement;
    const selectedEl = document.getElementById('signSelected') as HTMLParagraphElement;
    const imgEl = document.getElementById('signImage') as HTMLImageElement;
    const descEl = document.getElementById('signDescription') as HTMLParagraphElement;
    // const imgEl = document.getElementById('signImage'); // si usas imagen

    function render(letter: string) {
      if (selectedEl) selectedEl.textContent = `Letter: ${letter}`;
      if (imgEl) imgEl.src = `/hand-references/${encodeURIComponent(letter)}.png`;
      if (imgEl) imgEl.alt = `Sign ${letter}`;
      if (descEl) descEl.textContent = `Reference image of the sign for the letter ${letter}`;
      // Si luego usas imágenes: imgEl.src = `/signs/${letter}.png`;
    }

    // cambio al hacer click/tecla
    fieldset.addEventListener('change', (e) => {
      const t = e.target as HTMLInputElement | null;
      if (t && t.name === 'letter') render(t.value);
    });

    // estado inicial (si alguno ya viene checked)
    const checked = fieldset.querySelector('input[name="letter"]:checked') as HTMLInputElement;
    render(checked ? checked.value : 'A');

</script>